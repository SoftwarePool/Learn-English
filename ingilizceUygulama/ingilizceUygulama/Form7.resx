<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAP/2Q==
</value>
  </data>
</root>